server.port=9001
spring.application.name=g2-api-gateway-service

#spring.config.import=optional:configserver:http://localhost:9000
#spring.cloud.config.uri=http://localhost:9000

spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.instanceId=${spring.application.name}:${server.port}
spring.cloud.consul.discovery.healthCheckInterval=12s
spring.cloud.consul.config.enabled=false



spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*

spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.default-filters[1]=AddResponseHeader=Access-Control-Allow-Origin, *


spring.cloud.gateway.routes[0].id=allergy_service_route
spring.cloud.gateway.routes[0].uri=lb://g2-allergy-service/
spring.cloud.gateway.routes[0].predicates[0]=Path=/allergy-service/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/allergy-service/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[0].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.name=allergyServiceCircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.fallbackUri=forward:/g2-allergy-service-fallback


spring.cloud.gateway.routes[1].id=health_record_service_route
spring.cloud.gateway.routes[1].uri=lb://g2-patient-health-records-service/
spring.cloud.gateway.routes[1].predicates[0]=Path=/health-record-service/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/health-record-service/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[1].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.name=healthRecordServiceCircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.fallbackUri=forward:/g2-patient-health-records-service-fallback


spring.cloud.gateway.routes[2].id=authentication_service_route
spring.cloud.gateway.routes[2].uri=lb://g2-authentication-service/
spring.cloud.gateway.routes[2].predicates[0]=Path=/authentication-service/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/authentication-service/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[2].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.name=authenticationServiceCircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.fallbackUri=forward:/g2-authentication-service-fallback


spring.cloud.gateway.routes[3].id=notification_service_route
spring.cloud.gateway.routes[3].uri=lb://g2-notification-service/
spring.cloud.gateway.routes[3].predicates[0]=Path=/notification-service/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/notification-service/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[3].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[3].filters[1].args.name=notificationServiceCircuitBreaker
spring.cloud.gateway.routes[3].filters[1].args.fallbackUri=forward:/g2-notification-service-fallback


spring.cloud.gateway.routes[4].id=patient_info_service_route
spring.cloud.gateway.routes[4].uri=lb://g2-patient-info-service/
spring.cloud.gateway.routes[4].predicates[0]=Path=/patient-info-service/**
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/patient-info-service/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[4].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[4].filters[1].args.name=patientInfoServiceCircuitBreaker
spring.cloud.gateway.routes[4].filters[1].args.fallbackUri=forward:/g2-patient-info-service-fallback


spring.cloud.gateway.routes[5].id=physician_availability_service_route
spring.cloud.gateway.routes[5].uri=lb://g2-physician-availability-service/
spring.cloud.gateway.routes[5].predicates[0]=Path=/physician-availability-service/**
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/physician-availability-service/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[5].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[5].filters[1].args.name=physicianAvailabilityServiceCircuitBreaker
spring.cloud.gateway.routes[5].filters[1].args.fallbackUri=forward:/g2-physician-availability-service-fallback


spring.cloud.gateway.routes[6].id=appointment_service_route
spring.cloud.gateway.routes[6].uri=lb://g2-Appointment-service/
spring.cloud.gateway.routes[6].predicates[0]=Path=/appointment-service/**
spring.cloud.gateway.routes[6].filters[0]=RewritePath=/appointment-service/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[6].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[6].filters[1].args.name=appointmentServiceCircuitBreaker
spring.cloud.gateway.routes[6].filters[1].args.fallbackUri=forward:/g2-Appointment-service-fallback

spring.cloud.gateway.routes[7].id=auth0_service_route
spring.cloud.gateway.routes[7].uri=lb://g2-auth0-service/
spring.cloud.gateway.routes[7].predicates[0]=Path=/auth0-service/**
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/auth0-service/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[7].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[7].filters[1].args.name=auth0ServiceCircuitBreaker
spring.cloud.gateway.routes[7].filters[1].args.fallbackUri=forward:/g2-auth0-service-fallback

spring.devtools.add-properties=false

#logger
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.com.pms.*=INFO
logging.file.name=applogs.log
logging.level.[org.hibernate]=ERROR
logging.level.[com.pms.*]=DEBUG

management.endpoint.gateway.enabled=true
management.health.circuitbreakers.enabled=true

management.endpoints.web.exposure.include=*

#spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
#spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET, POST
